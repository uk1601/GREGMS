/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package UI;

import Business.Business;
import Business.Profiles.EnergyProducer.EnergyProducerProfile;
import Business.Users.UserAccount;
import Business.Utils.ChartUtils;
import Business.EnergyProvider.EnergyData;
import Business.EnergyProvider.EnergyDataCatalog;
import Business.EnergyProvider.EnergyOffer;
import Business.GovtAgency.GovernmentAgencyData;
import Business.GovtAgency.Policy;
import Business.Utils.ForecastingUtil;
import Business.Utils.Notification;
import Business.Utils.TableExporter;
import Business.Utils.Transaction;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartPanel;



/**
 *
 * @author udayk
 */
public class EnergyProducerDBJPanel extends javax.swing.JPanel {

    /** Creates new form EnergyProducerDBJPanel */
    Business business;
    
    JPanel cardLayout;
    
    UserAccount user;
    
    EnergyProducerProfile epp;
    
    UUID currentlyEditingId;
    private Image originalImage;
    private Image originalImage1;
    
    public EnergyProducerDBJPanel(JPanel cardLayout, Business business, UserAccount user) {
        initComponents();
        this.cardLayout = cardLayout;
        this.business = business;
        this.user = user;
        this.epp = business.getEnergyProducerProfiles().findEmployer(user.getPersonId());
        jLabel2.setText(epp.getPerson().getName());
        populateEnergyDataTable();
        addImage(notificationLabel, "/images/default.png");
        checkForNotifications();
        populateNotifications();
        populateTransactionsTable();
        populatePolicyTable();
        updateOfferList();
        try {
            URL imageURL1 = getClass().getResource("/images/ep.png");
            URL imageURL2 = getClass().getResource("/images/ep1.png");
            if (imageURL1 != null) {
                originalImage = ImageIO.read(imageURL1);
            } else {
                System.err.println("Image not found");
            }
            if (imageURL2 != null) {
                originalImage1 = ImageIO.read(imageURL2);
            } else {
                System.err.println("Image not found");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Add a component listener to resize the image when the JLabel is resized
        img1.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent e) {
                resizeImage(img1, originalImage);
            }
        });
        img2.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent e) {
                resizeImage(img2, originalImage1);
            }
        });


        // path to your default/no notifications icon
    }
    
    
    private void resizeImage(JLabel label, Image originalImage) {
        if (originalImage != null) {
            // Resize the image to the current size of the JLabel
            Image resizedImage = originalImage.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);

            // Update the icon of the JLabel
            ImageIcon icon = new ImageIcon(resizedImage);
            label.setIcon(icon);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        TopPane = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        notificationLabel = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        BottomTabPane = new javax.swing.JTabbedPane();
        PDPanel = new javax.swing.JPanel();
        PDTabbedPane = new javax.swing.JTabbedPane();
        InsertData = new javax.swing.JPanel();
        lblDate = new javax.swing.JLabel();
        lblAmt = new javax.swing.JLabel();
        txtAmt = new javax.swing.JTextField();
        lblSource = new javax.swing.JLabel();
        ComboBoxSource = new javax.swing.JComboBox<>();
        lblComments = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaComments = new javax.swing.JTextArea();
        btnSubmit = new javax.swing.JButton();
        lblLocation = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        InsertBtn = new javax.swing.JButton();
        ViewData = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        UpdateData = new javax.swing.JPanel();
        lblDate1 = new javax.swing.JLabel();
        lblAmt2 = new javax.swing.JLabel();
        txtAmt2 = new javax.swing.JTextField();
        lblSource1 = new javax.swing.JLabel();
        ComboBoxSource1 = new javax.swing.JComboBox<>();
        lblComments1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaComments1 = new javax.swing.JTextArea();
        UpdatePanelBtn = new javax.swing.JButton();
        lblLocation1 = new javax.swing.JLabel();
        txtLocation1 = new javax.swing.JTextField();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        Forecasting = new javax.swing.JPanel();
        lblFromDate = new javax.swing.JLabel();
        jDateChooserFromDate = new com.toedter.calendar.JDateChooser();
        lblToDate = new javax.swing.JLabel();
        jDateChooserToDate = new com.toedter.calendar.JDateChooser();
        btnForecast = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableForcast = new javax.swing.JTable();
        btnExport1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ForcastingChart = new javax.swing.JPanel();
        MarketPlace = new javax.swing.JPanel();
        MarketPlaceTabbedPane = new javax.swing.JTabbedPane();
        EnergyTradingForm = new javax.swing.JPanel();
        lblAmt1 = new javax.swing.JLabel();
        txtAmt1 = new javax.swing.JTextField();
        lblSource2 = new javax.swing.JLabel();
        ComboBoxSource2 = new javax.swing.JComboBox<>();
        lblComments2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaComments2 = new javax.swing.JTextArea();
        btnSubmit2 = new javax.swing.JButton();
        lblLocation2 = new javax.swing.JLabel();
        txtLocation2 = new javax.swing.JTextField();
        lblDate2 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        CurrentOffers = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnExport2 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        TransactionHistory = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        btnExport3 = new javax.swing.JButton();
        btnRefresh3 = new javax.swing.JButton();
        PolicyManagement = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        btnExport4 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        Notification = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        NoteTable = new javax.swing.JTable();
        lblDate3 = new javax.swing.JLabel();
        lblAmt3 = new javax.swing.JLabel();
        txtAmt3 = new javax.swing.JTextField();
        lblComments3 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAreaComments3 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        txtAmt4 = new javax.swing.JTextField();
        Help1 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtDescription1 = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        img1 = new javax.swing.JLabel();
        img2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(1000, 600));

        TopPane.setBackground(new java.awt.Color(255, 255, 255));
        TopPane.setPreferredSize(new java.awt.Dimension(1000, 70));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Settings");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("ENERGY PRODUCER");

        jLabel2.setBackground(new java.awt.Color(192, 221, 250));
        jLabel2.setFont(new java.awt.Font("Segoe Script", 3, 12)); // NOI18N
        jLabel2.setText("Name");

        notificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationLabelMouseClicked(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("logout");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopPaneLayout = new javax.swing.GroupLayout(TopPane);
        TopPane.setLayout(TopPaneLayout);
        TopPaneLayout.setHorizontalGroup(
            TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 549, Short.MAX_VALUE)
                .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(25, 25, 25))
        );
        TopPaneLayout.setVerticalGroup(
            TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPaneLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(8, Short.MAX_VALUE))
            .addGroup(TopPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(btnBack)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(TopPane);

        BottomTabPane.setBackground(new java.awt.Color(255, 255, 255));

        PDPanel.setBackground(new java.awt.Color(255, 255, 255));

        PDTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        PDTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        InsertData.setBackground(new java.awt.Color(255, 255, 255));

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate.setText("Date");

        lblAmt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmt.setText("Amount of Energy Produced(MWh)");

        lblSource.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSource.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSource.setText("Source of Energy Produced");

        ComboBoxSource.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hydro", "Wind", "Solar", "BioMass" }));

        lblComments.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComments.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblComments.setText("Comments (If any)");

        txtAreaComments.setColumns(20);
        txtAreaComments.setRows(5);
        jScrollPane1.setViewportView(txtAreaComments);

        btnSubmit.setBackground(new java.awt.Color(0, 0, 0));
        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblLocation.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLocation.setText("Production Location");

        jLabel5.setText("or");

        InsertBtn.setBackground(new java.awt.Color(0, 0, 0));
        InsertBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        InsertBtn.setForeground(new java.awt.Color(255, 255, 255));
        InsertBtn.setText("Import from CSV");
        InsertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InsertDataLayout = new javax.swing.GroupLayout(InsertData);
        InsertData.setLayout(InsertDataLayout);
        InsertDataLayout.setHorizontalGroup(
            InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(InsertDataLayout.createSequentialGroup()
                        .addComponent(lblAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAmt)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createSequentialGroup()
                        .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createSequentialGroup()
                                .addComponent(lblSource, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ComboBoxSource, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createSequentialGroup()
                                    .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtLocation))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createSequentialGroup()
                                    .addComponent(lblComments, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane1))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, InsertDataLayout.createSequentialGroup()
                                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(btnSubmit)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InsertDataLayout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jLabel5))
                    .addGroup(InsertDataLayout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(InsertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InsertDataLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, txtAmt});

        InsertDataLayout.setVerticalGroup(
            InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertDataLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDate)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAmt)
                    .addComponent(txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSource)
                    .addComponent(ComboBoxSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLocation)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsertDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComments)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InsertBtn)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        InsertDataLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ComboBoxSource, btnSubmit, lblAmt, lblComments, lblDate, lblLocation, lblSource, txtAmt, txtLocation});

        PDTabbedPane.addTab("Insert", InsertData);

        ViewData.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "RecordID", "Date", "Source", "Location", "Amount Produced", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(192, 221, 250));
        jScrollPane2.setViewportView(jTable1);

        btnDelete.setBackground(new java.awt.Color(0, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExport.setBackground(new java.awt.Color(0, 0, 0));
        btnExport.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport.setForeground(new java.awt.Color(255, 255, 255));
        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewDataLayout = new javax.swing.GroupLayout(ViewData);
        ViewData.setLayout(ViewDataLayout);
        ViewDataLayout.setHorizontalGroup(
            ViewDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewDataLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(ViewDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ViewDataLayout.createSequentialGroup()
                        .addComponent(btnExport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        ViewDataLayout.setVerticalGroup(
            ViewDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewDataLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnExport))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        PDTabbedPane.addTab("View", ViewData);

        UpdateData.setBackground(new java.awt.Color(255, 255, 255));

        lblDate1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate1.setText("Date");

        lblAmt2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmt2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmt2.setText("Amount of Energy Produced(MWh)");

        lblSource1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSource1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSource1.setText("Source of Energy Produced");

        ComboBoxSource1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hydro", "Wind", "Solar", "BioMass" }));

        lblComments1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComments1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblComments1.setText("Comments (If any)");

        jScrollPane3.setBackground(new java.awt.Color(192, 221, 250));

        txtAreaComments1.setColumns(20);
        txtAreaComments1.setRows(5);
        jScrollPane3.setViewportView(txtAreaComments1);

        UpdatePanelBtn.setBackground(new java.awt.Color(0, 0, 0));
        UpdatePanelBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        UpdatePanelBtn.setForeground(new java.awt.Color(255, 255, 255));
        UpdatePanelBtn.setText("Update");
        UpdatePanelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePanelBtnActionPerformed(evt);
            }
        });

        lblLocation1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocation1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLocation1.setText("Production Location");

        javax.swing.GroupLayout UpdateDataLayout = new javax.swing.GroupLayout(UpdateData);
        UpdateData.setLayout(UpdateDataLayout);
        UpdateDataLayout.setHorizontalGroup(
            UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateDataLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UpdateDataLayout.createSequentialGroup()
                        .addComponent(lblLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLocation1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UpdateDataLayout.createSequentialGroup()
                        .addComponent(lblComments1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                    .addGroup(UpdateDataLayout.createSequentialGroup()
                        .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAmt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSource1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(19, 19, 19)
                        .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAmt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxSource1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UpdateDataLayout.createSequentialGroup()
                        .addComponent(lblDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 307, Short.MAX_VALUE))
            .addGroup(UpdateDataLayout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(UpdatePanelBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UpdateDataLayout.setVerticalGroup(
            UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateDataLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDate1)
                    .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAmt2)
                    .addComponent(txtAmt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSource1)
                    .addComponent(ComboBoxSource1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLocation1)
                    .addComponent(txtLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComments1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(UpdatePanelBtn)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        PDTabbedPane.addTab("Update", UpdateData);

        javax.swing.GroupLayout PDPanelLayout = new javax.swing.GroupLayout(PDPanel);
        PDPanel.setLayout(PDPanelLayout);
        PDPanelLayout.setHorizontalGroup(
            PDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PDTabbedPane)
        );
        PDPanelLayout.setVerticalGroup(
            PDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PDTabbedPane)
        );

        BottomTabPane.addTab("Production Data", PDPanel);

        Forecasting.setBackground(new java.awt.Color(255, 255, 255));

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date");

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date");

        btnForecast.setBackground(new java.awt.Color(0, 0, 0));
        btnForecast.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnForecast.setForeground(new java.awt.Color(255, 255, 255));
        btnForecast.setText("Forecast");
        btnForecast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForecastActionPerformed(evt);
            }
        });

        jTableForcast.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Forecasted Production"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableForcast);

        btnExport1.setBackground(new java.awt.Color(0, 0, 0));
        btnExport1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport1.setForeground(new java.awt.Color(255, 255, 255));
        btnExport1.setText("Export");
        btnExport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExport1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        ForcastingChart.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout ForcastingChartLayout = new javax.swing.GroupLayout(ForcastingChart);
        ForcastingChart.setLayout(ForcastingChartLayout);
        ForcastingChartLayout.setHorizontalGroup(
            ForcastingChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
        ForcastingChartLayout.setVerticalGroup(
            ForcastingChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ForecastingLayout = new javax.swing.GroupLayout(Forecasting);
        Forecasting.setLayout(ForecastingLayout);
        ForecastingLayout.setHorizontalGroup(
            ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForecastingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ForecastingLayout.createSequentialGroup()
                        .addComponent(lblFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForecastingLayout.createSequentialGroup()
                        .addComponent(btnForecast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ForecastingLayout.createSequentialGroup()
                        .addComponent(ForcastingChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ForecastingLayout.setVerticalGroup(
            ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForecastingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateChooserFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForecast)
                            .addComponent(btnExport1))
                        .addComponent(jDateChooserToDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForecastingLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ForecastingLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ForecastingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ForcastingChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        BottomTabPane.addTab("Forecasting", Forecasting);

        MarketPlace.setBackground(new java.awt.Color(255, 255, 255));

        MarketPlaceTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        MarketPlaceTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        EnergyTradingForm.setBackground(new java.awt.Color(255, 255, 255));

        lblAmt1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmt1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmt1.setText("Quantity of Energy (MWh)");

        lblSource2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSource2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSource2.setText("Source of Energy Produced");

        ComboBoxSource2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hydro", "Wind", "Solar", "BioMass" }));

        lblComments2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComments2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblComments2.setText("Comments (If any)");

        jScrollPane5.setBackground(new java.awt.Color(192, 221, 250));

        txtAreaComments2.setColumns(20);
        txtAreaComments2.setRows(5);
        jScrollPane5.setViewportView(txtAreaComments2);

        btnSubmit2.setBackground(new java.awt.Color(0, 0, 0));
        btnSubmit2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit2.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit2.setText("Submit");
        btnSubmit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmit2ActionPerformed(evt);
            }
        });

        lblLocation2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocation2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLocation2.setText("Price");

        lblDate2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate2.setText("Date");

        javax.swing.GroupLayout EnergyTradingFormLayout = new javax.swing.GroupLayout(EnergyTradingForm);
        EnergyTradingForm.setLayout(EnergyTradingFormLayout);
        EnergyTradingFormLayout.setHorizontalGroup(
            EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnergyTradingFormLayout.createSequentialGroup()
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EnergyTradingFormLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblComments2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLocation2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSource2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(lblAmt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDate2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ComboBoxSource2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAmt1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLocation2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)))
                    .addGroup(EnergyTradingFormLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(btnSubmit2)))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        EnergyTradingFormLayout.setVerticalGroup(
            EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnergyTradingFormLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAmt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmt1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSource2)
                    .addComponent(ComboBoxSource2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocation2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocation2))
                .addGap(18, 18, 18)
                .addGroup(EnergyTradingFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComments2))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit2)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        EnergyTradingFormLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ComboBoxSource2, btnSubmit2, jDateChooser2, lblAmt1, lblComments2, lblDate2, lblLocation2, lblSource2, txtAmt1, txtLocation2});

        MarketPlaceTabbedPane.addTab("Energy Trading Form", EnergyTradingForm);

        CurrentOffers.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date of Offer", "Offer ID", "Energy Source", "Quantity", "Price", "Status"
            }
        ));
        jScrollPane6.setViewportView(jTable3);

        btnExport2.setBackground(new java.awt.Color(0, 0, 0));
        btnExport2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport2.setForeground(new java.awt.Color(255, 255, 255));
        btnExport2.setText("Export");
        btnExport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExport2ActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CurrentOffersLayout = new javax.swing.GroupLayout(CurrentOffers);
        CurrentOffers.setLayout(CurrentOffersLayout);
        CurrentOffersLayout.setHorizontalGroup(
            CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentOffersLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CurrentOffersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExport2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        CurrentOffersLayout.setVerticalGroup(
            CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentOffersLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExport2)
                    .addComponent(btnCancel))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        MarketPlaceTabbedPane.addTab("Current Offers and Bids", CurrentOffers);

        TransactionHistory.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Offer ID", "Transaction ID", "Energy Source", "Quantity", "Price"
            }
        ));
        jScrollPane7.setViewportView(jTable4);

        btnExport3.setBackground(new java.awt.Color(0, 0, 0));
        btnExport3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport3.setForeground(new java.awt.Color(255, 255, 255));
        btnExport3.setText("Export");

        btnRefresh3.setBackground(new java.awt.Color(0, 0, 0));
        btnRefresh3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh3.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh3.setText("Refresh");

        javax.swing.GroupLayout TransactionHistoryLayout = new javax.swing.GroupLayout(TransactionHistory);
        TransactionHistory.setLayout(TransactionHistoryLayout);
        TransactionHistoryLayout.setHorizontalGroup(
            TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionHistoryLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TransactionHistoryLayout.createSequentialGroup()
                        .addComponent(btnExport3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh3)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        TransactionHistoryLayout.setVerticalGroup(
            TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionHistoryLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh3)
                    .addComponent(btnExport3))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        MarketPlaceTabbedPane.addTab("Transaction History", TransactionHistory);

        javax.swing.GroupLayout MarketPlaceLayout = new javax.swing.GroupLayout(MarketPlace);
        MarketPlace.setLayout(MarketPlaceLayout);
        MarketPlaceLayout.setHorizontalGroup(
            MarketPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MarketPlaceTabbedPane)
        );
        MarketPlaceLayout.setVerticalGroup(
            MarketPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MarketPlaceTabbedPane)
        );

        BottomTabPane.addTab("MarketPlace", MarketPlace);

        PolicyManagement.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane10.setBackground(new java.awt.Color(192, 221, 250));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Policy ID", "Policy Name", "Effective Date", "End Date", "Status"
            }
        ));
        jScrollPane10.setViewportView(jTable5);

        btnExport4.setBackground(new java.awt.Color(0, 0, 0));
        btnExport4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport4.setForeground(new java.awt.Color(255, 255, 255));
        btnExport4.setText("Export");
        btnExport4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExport4ActionPerformed(evt);
            }
        });

        btnUpdate1.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate1.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate1.setText("View");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnExport4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate1))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate1)
                    .addComponent(btnExport4))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("View", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Policy Name");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Effective Date");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("End Date");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane12.setViewportView(jTextArea2);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Description");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Status");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5)))
                .addGap(361, 361, 361))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jDateChooser7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(233, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Detailed View", jPanel5);

        javax.swing.GroupLayout PolicyManagementLayout = new javax.swing.GroupLayout(PolicyManagement);
        PolicyManagement.setLayout(PolicyManagementLayout);
        PolicyManagementLayout.setHorizontalGroup(
            PolicyManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolicyManagementLayout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PolicyManagementLayout.setVerticalGroup(
            PolicyManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        BottomTabPane.addTab("Polices", PolicyManagement);

        Notification.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane11.setBackground(new java.awt.Color(192, 221, 250));

        NoteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NotifcationID", "Msg", "Date and Time"
            }
        ));
        jScrollPane11.setViewportView(NoteTable);
        if (NoteTable.getColumnModel().getColumnCount() > 0) {
            NoteTable.getColumnModel().getColumn(1).setResizable(false);
        }

        lblDate3.setBackground(new java.awt.Color(192, 221, 250));
        lblDate3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate3.setText("Date");

        lblAmt3.setBackground(new java.awt.Color(192, 221, 250));
        lblAmt3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmt3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmt3.setText("Notification ID");

        lblComments3.setBackground(new java.awt.Color(192, 221, 250));
        lblComments3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComments3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblComments3.setText("Message");

        jScrollPane9.setBackground(new java.awt.Color(192, 221, 250));

        txtAreaComments3.setColumns(20);
        txtAreaComments3.setRows(5);
        jScrollPane9.setViewportView(txtAreaComments3);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("View");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(0, 0, 0));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NotificationLayout = new javax.swing.GroupLayout(Notification);
        Notification.setLayout(NotificationLayout);
        NotificationLayout.setHorizontalGroup(
            NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblComments3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAmt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDate3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAmt3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmt4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteBtn))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        NotificationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAmt3, lblComments3, lblDate3});

        NotificationLayout.setVerticalGroup(
            NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationLayout.createSequentialGroup()
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NotificationLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(NotificationLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDate3)
                            .addComponent(txtAmt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAmt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAmt3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblComments3))
                        .addGap(18, 18, 18)
                        .addComponent(DeleteBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        NotificationLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAmt3, lblComments3, lblDate3, txtAmt3, txtAmt4});

        BottomTabPane.addTab("Notifications", Notification);

        Help1.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane5.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane5.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setText("Issue raised By ");

        txtDescription1.setColumns(20);
        txtDescription1.setRows(5);
        jScrollPane13.setViewportView(txtDescription1);

        jLabel16.setText("Description of Issue");

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Submit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane13)
                            .addComponent(jTextField6)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jButton5)))
                .addContainerGap(353, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(302, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Submit Issue", jPanel8);

        javax.swing.GroupLayout Help1Layout = new javax.swing.GroupLayout(Help1);
        Help1.setLayout(Help1Layout);
        Help1Layout.setHorizontalGroup(
            Help1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );
        Help1Layout.setVerticalGroup(
            Help1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5)
        );

        BottomTabPane.addTab("Help", Help1);

        jSplitPane1.setRightComponent(BottomTabPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(img1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(img2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(img2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addImage(JLabel lbl, String url){
        URL imageUrl = getClass().getResource(url);
        if (imageUrl != null) {
            ImageIcon icon = new ImageIcon(imageUrl);

            // Scale it to fit the JLabel
            Image image = icon.getImage();
            Image newimg = image.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH); // Scale it to fit the JLabel dimensions

            // Re-create the ImageIcon with the new scaled image
            icon = new ImageIcon(newimg);

            // Set the icon on the label
            lbl.setIcon(icon);
        } else {
            System.err.println("Resource not found: /images/default.png");
        }
    }
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // Capture input data from form fields
        Date date = jDateChooser1.getDate();
        LocalDateTime dateTime = LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());
        double amountProduced = Double.parseDouble(txtAmt.getText());
        String sourceOfEnergy = ComboBoxSource.getSelectedItem().toString();
        String productionLocation = txtLocation.getText();
        String comments = txtAreaComments.getText();

        // Assuming that you have a method to get the currently logged-in producer ID
        UUID producerID = epp.getEnergyProducer().getProducerID();

        // Create a new EnergyData object
        EnergyData newData = business.getEnergyProducers().findEnergyProducerById(producerID).getEdc().addEnergyData(producerID, dateTime, amountProduced, sourceOfEnergy, productionLocation, comments);

        // Add the new object to the EnergyDataCatalog
        // Assuming you have an instance of EnergyDataCatalog. If not, you need to create/get it. 
        JOptionPane.showMessageDialog(this, "Energy details entered succussfully!");
        populateEnergyDataTable();
    
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void populateEnergyDataTable() {

    EnergyDataCatalog energyDataCatalog = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc();

    // Set up the table model
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing data

    // Loop through the energy data records and add them to the table model
    for (EnergyData data : energyDataCatalog.getEnergyDataList()) {
        Object[] row = new Object[6]; 
        row[0] = data;
        row[1] = data.getTimestamp().toLocalDate(); 
        row[2] = data.getSourceOfEnergy();
        row[3] = data.getProductionLocation();
        row[4] = data.getEnergyOutput();
        row[5] = data.getComments();

        model.addRow(row);
    }
}
    private void UpdatePanelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePanelBtnActionPerformed
        // Retrieve the data from the fields
        Date date = jDateChooser4.getDate();
        LocalDateTime dateTime = LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());
        String source = ComboBoxSource1.getSelectedItem().toString();
        String location = txtLocation1.getText();
        double amountProduced = Double.parseDouble(txtAmt2.getText());
        String comments = txtAreaComments1.getText();

        // Retrieve the EnergyData object from the catalog
        EnergyDataCatalog energyDataCatalog = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc();
        EnergyData dataToUpdate = energyDataCatalog.findEnergyDataById(currentlyEditingId);

        // Update the object's data
        dataToUpdate.setTimestamp(dateTime);
        dataToUpdate.setSourceOfEnergy(source);
        dataToUpdate.setProductionLocation(location);
        dataToUpdate.setEnergyOutput(amountProduced);
        dataToUpdate.setComments(comments);
        dataToUpdate.setLastUpdated(LocalDateTime.now()); // Set the last update time to now

        // Refresh the table
        populateEnergyDataTable();
        JOptionPane.showMessageDialog(null, "Updated Succussfully!");
    }//GEN-LAST:event_UpdatePanelBtnActionPerformed

    private void btnSubmit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmit2ActionPerformed
        Date date = jDateChooser2.getDate(); // Assuming you have a date picker for the date
        String energySource = (String) ComboBoxSource2.getSelectedItem(); // The JComboBox for selecting the source
        double quantity = Double.parseDouble(txtAmt1.getText()); // The JTextField for the quantity
        double price = Double.parseDouble(txtLocation2.getText()); // The JTextField for the price
        String comments = txtAreaComments2.getText(); // The JTextArea for comments

        // Convert Date to LocalDateTime (Java 8)
        LocalDateTime localDateTime = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();

        if (validateEnergyAvailability(energySource, quantity)) {
            EnergyOffer newOffer = epp.getEnergyProducer().getEoc().addEnergyOffer(epp.getEnergyProducer().getProducerID(), localDateTime, energySource, quantity, price, comments); // producerId should be the ID of the logged-in producer
            System.out.print(newOffer.getProducerId().toString());
            System.out.print(epp.getEnergyProducer().getProducerID());
            updateOfferList();
            // Notify the user
            JOptionPane.showMessageDialog(this, "Offer submitted successfully!");
        }else{
            // If validation fails, show an error message
            JOptionPane.showMessageDialog(this, "Not enough available energy to make this offer.", "Validation Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnSubmit2ActionPerformed

    private void populateNotifications(){
        DefaultTableModel model = (DefaultTableModel) NoteTable.getModel();

        // Clear the current contents of the table
        model.setRowCount(0);

        // Retrieve the list of all offers from the catalog
        List<Notification> ns = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getNc().getNotificationList();

        // Populate the table with the offer data
        for (Notification n : ns) {
            Object[] row = new Object[3]; // Adjust the size based on the number of columns in your table
            row[0] = n; // Adjust this to match the actual date format you want to display
            row[1] = n.getMessage();
            row[2] = n.getDateTime();
            System.out.println("Inside loop n  2 ");
            model.addRow(row);
        }
    }
    private void updateOfferList() {
    // Assume jTableOffers is your JTable that displays the offers
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

        // Clear the current contents of the table
        model.setRowCount(0);

        // Retrieve the list of all offers from the catalog
        List<EnergyOffer> offers = epp.getEnergyProducer().getEoc().getAllOffers();

        // Populate the table with the offer data
        for (EnergyOffer offer : offers) {
            Object[] row = new Object[6]; // Adjust the size based on the number of columns in your table
            row[1] = offer; // Adjust this to match the actual date format you want to display
            row[0] = offer.getLastUpdated().toLocalDate();
            row[2] = offer.getEnergySource();
            row[3] = offer.getQuantity();
            row[4] = offer.getPrice();
            row[5] = offer.getStatus();
            model.addRow(row);
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         // Get the selected row index
    int selectedRow = jTable1.getSelectedRow();
    
    if (selectedRow >= 0) {
        // Assuming the first column contains the UUID as a string
        EnergyData ed = (EnergyData) jTable1.getValueAt(selectedRow, 0);
        
        // Get the catalog and remove the energy data record
        EnergyDataCatalog energyDataCatalog = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc();
        energyDataCatalog.removeEnergyData(ed.getRecordID());
        
        // Refresh the table
        populateEnergyDataTable();
    } else {
        // No row selected
        JOptionPane.showMessageDialog(null, "Please select a row to delete");
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {

            EnergyData ed = (EnergyData) jTable1.getValueAt(selectedRow, 0);

            PDTabbedPane.setSelectedIndex(2); // Assuming 'Update' is the third tab

            // Convert LocalDateTime to Date
            Date date = Date.from(ed.getTimestamp().atZone(ZoneId.systemDefault()).toInstant());
            jDateChooser4.setDate(date); // Set date in the date chooser

            // Set the other fields
            ComboBoxSource1.setSelectedItem(ed.getSourceOfEnergy()); // Set source in the combo box
            txtLocation1.setText(ed.getProductionLocation()); // Set location in the text field
            txtAmt2.setText(Double.toString(ed.getEnergyOutput())); // Set amount produced in the text field
            txtAreaComments1.setText(ed.getComments()); // Set comments in the text area

            // Save the ID of the record being edited
            currentlyEditingId = ed.getRecordID(); // Make sure this variable is declared in your class
        } else {
            JOptionPane.showMessageDialog(null, "Please select a record to update.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed

        TableExporter.exportToCSV(jTable1, this);
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnExport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExport1ActionPerformed

        TableExporter.exportToCSV(jTableForcast, this);
    }//GEN-LAST:event_btnExport1ActionPerformed

    private void btnForecastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForecastActionPerformed
        List<EnergyData> historicalData = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc().getEnergyDataList();

        double totalProduction = 0;
        for (EnergyData data : historicalData) {
            totalProduction += data.getEnergyOutput();
        }

        // Forecast future production based on the average
        LocalDate startDate = jDateChooserFromDate.getDate().toInstant()
        .atZone(ZoneId.systemDefault())
        .toLocalDate(); // get start date from "From Date" date chooser

        LocalDate endDate = jDateChooserToDate.getDate().toInstant()
        .atZone(ZoneId.systemDefault())
        .toLocalDate();// get end date from "To Date" date chooser
        
        List<EnergyData> forecastedData = ForecastingUtil.forecastProduction(historicalData, startDate, endDate, epp.getEnergyProducer().getProducerID(), "defaultLocation", "defaultSource");
        ChartPanel chartPanel = ChartUtils.createLineChartPanel(forecastedData);
        ForcastingChart.removeAll();
        // Assuming 'this' is a JPanel, you add the chartPanel to it
        ForcastingChart.setLayout(new BorderLayout());
        ForcastingChart.add(chartPanel, BorderLayout.CENTER);

        // Revalidate and repaint to ensure the chart is displayed
        ForcastingChart.revalidate();
        ForcastingChart.repaint();

        // Display the forecast in the table
        populateForecastTable(forecastedData);
    }//GEN-LAST:event_btnForecastActionPerformed

    private void btnExport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExport2ActionPerformed
        TableExporter.exportToCSV(jTable3, this);
    }//GEN-LAST:event_btnExport2ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int selectedRow = jTable3.getSelectedRow();

    if (selectedRow >= 0) {
        // Confirm before deletion
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this offer?", "Confirmation", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Get the Offer ID from the table. The ID should be in a hidden column or retrievable in some way.
            EnergyOffer eo = (EnergyOffer) jTable3.getValueAt(selectedRow, 1); // Replace 'yourOfferIdColumnIndex' with the actual index of the column or method to retrieve the ID.
            
            // Remove the offer from the catalog
            epp.getEnergyProducer().getEoc().removeEnergyOffer(eo.getOfferId());
            
            // Update the offer list to reflect the deletion
            updateOfferList();
            
            JOptionPane.showMessageDialog(this, "Offer deleted successfully.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an offer to delete.");
    }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void InsertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select a CSV file to import");
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");
        fileChooser.addChoosableFileFilter(filter);

        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            importEnergyDataFromCSV(selectedFile);
        }
    }//GEN-LAST:event_InsertBtnActionPerformed

    private void btnExport4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExport4ActionPerformed
        TableExporter.exportToCSV(jTable5, this);
    }//GEN-LAST:event_btnExport4ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        int selectedRow = jTable5.getSelectedRow();

        if (selectedRow >= 0) {
            // Assuming policy details are in the following order:
            // Policy ID, Policy Name, Effective Date, End Date, Status, Description
            Policy policy = (Policy) jTable5.getModel().getValueAt(selectedRow, 0);

            // Populate the update form fields
            jTextField2.setText(policy.getPolicyName());
            LocalDate localDate = policy.getEffectiveDate();
            Instant instant = localDate.atStartOfDay(ZoneId.systemDefault()).toInstant();
            Date date = Date.from(instant);

            jDateChooser7.setDate(date);

            LocalDate localDate1 = policy.getEndDate();
            Instant instant1 = localDate1.atStartOfDay(ZoneId.systemDefault()).toInstant();
            Date date1 = Date.from(instant1);
            jDateChooser8.setDate(date1);
            jTextArea2.setText(policy.getDescription());
            jTextField5.setText(policy.getStatus());

            

            
            jTabbedPane2.setSelectedIndex(1); // Replace UPDATE_TAB_INDEX with actual index of update tab
        } else {
            JOptionPane.showMessageDialog(null, "Please select a policy to view.");
        }
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void populatePolicyTable() {
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

        // Clear existing data
        model.setRowCount(0);

        GovernmentAgencyData agencyData = business.getGac();
        List<Policy> policies = agencyData.getPolicyCatalog().getAllPolicies();

        // Loop through the list and add rows to the table
        for (Policy policy : policies) {
            Object[] row = new Object[5]; // Adjust the size based on the number of columns in your table
            row[0] = policy;
            row[1] = policy.getPolicyName();
            row[2] = policy.getEffectiveDate(); // Convert to string if necessary
            row[3] = policy.getEndDate(); // Convert to string if necessary
            row[4] = policy.getStatus();

            model.addRow(row);
        }
    }
    private void notificationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationLabelMouseClicked
        BottomTabPane.setSelectedIndex(4);
        addImage(notificationLabel, "/images/default.png");
    }//GEN-LAST:event_notificationLabelMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selectedRow = NoteTable.getSelectedRow();
        if (selectedRow >= 0) {
            Notification n = (Notification) NoteTable.getModel().getValueAt(selectedRow, 0);
            LocalDateTime localDt = n.getDateTime();
            txtAmt4.setText(localDt.toString());
            txtAmt3.setText(n.getNotificationId().toString());
            txtAreaComments3.setText(n.getMessage());
            txtAmt3.setEditable(false);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Notification to view.");
        }
            
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed

            epp.getEnergyProducer().getNc().removeNotification(UUID.fromString(txtAmt3.getText()));
            txtAmt4.setText("");
            txtAmt3.setText("");
            txtAreaComments3.setText("");
            txtAmt3.setEditable(false);
            JOptionPane.showMessageDialog(null, "Notifiaction Deleted.");
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        cardLayout.remove(this);
        CardLayout layout = (CardLayout) cardLayout.getLayout();
        layout.previous(cardLayout);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String raised = jTextField6.getText();
        String Des = txtDescription1.getText();

        business.getTpd().add(Des, raised);
        JOptionPane.showMessageDialog(this, "Issue reported succusfully");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AccInfoUpdateJPanel accCreationPanel = new AccInfoUpdateJPanel(cardLayout, business, user);
        cardLayout.add("AccInfoUpdateJPanel", accCreationPanel);
        CardLayout layout = (CardLayout) cardLayout.getLayout();
        layout.next(cardLayout);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void populateForecastTable(List<EnergyData> forecastedData) {
        DefaultTableModel model = (DefaultTableModel) jTableForcast.getModel(); // Replace jTableForecast with your actual table name
        model.setRowCount(0); // Clear existing data

        for (EnergyData data : forecastedData) {
           Object[] row = new Object[3]; 
            row[0] = data.getTimestamp().toLocalDate(); 
            row[1] = data.getEnergyOutput();
            model.addRow(row);
        }
    }
    
    private void importEnergyDataFromCSV(File csvFile) {
    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
        String line;
        br.readLine(); // This skips the header row

        while ((line = br.readLine()) != null) {
            String[] values = line.split(","); // Assuming the CSV is comma-separated
            
            // Parse the values. Adjust indices according to your CSV structure.
            LocalDateTime timestamp = LocalDateTime.parse(values[0], DateTimeFormatter.ISO_DATE_TIME);
            double energyOutput = Double.parseDouble(values[1]);
            String sourceOfEnergy = values[2];
            String productionLocation = values[3];
            String comments = values.length > 4 ? values[4] : ""; // Assuming comments might be optional
            
            // Here you would create a new EnergyData object
            // Assuming you have a method in your EnergyDataCatalog to add a new entry
            
            business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc().addEnergyData(epp.getEnergyProducer().getProducerID(), timestamp, energyOutput, sourceOfEnergy, productionLocation, comments);
        }
        
        // After import, you might want to refresh your data views
        populateEnergyDataTable();
        JOptionPane.showMessageDialog(this, "Energy data imported successfully.");
    } catch (FileNotFoundException e) {
        JOptionPane.showMessageDialog(this, "The selected file was not found.", "File Error", JOptionPane.ERROR_MESSAGE);
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "An error occurred while reading the file.", "Read Error", JOptionPane.ERROR_MESSAGE);
    } catch (NumberFormatException | DateTimeParseException e) {
        JOptionPane.showMessageDialog(this, "The file's format is incorrect.", "Format Error", JOptionPane.ERROR_MESSAGE);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane BottomTabPane;
    private javax.swing.JComboBox<String> ComboBoxSource;
    private javax.swing.JComboBox<String> ComboBoxSource1;
    private javax.swing.JComboBox<String> ComboBoxSource2;
    private javax.swing.JPanel CurrentOffers;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JPanel EnergyTradingForm;
    private javax.swing.JPanel ForcastingChart;
    private javax.swing.JPanel Forecasting;
    private javax.swing.JPanel Help1;
    private javax.swing.JButton InsertBtn;
    private javax.swing.JPanel InsertData;
    private javax.swing.JPanel MarketPlace;
    private javax.swing.JTabbedPane MarketPlaceTabbedPane;
    private javax.swing.JTable NoteTable;
    private javax.swing.JPanel Notification;
    private javax.swing.JPanel PDPanel;
    private javax.swing.JTabbedPane PDTabbedPane;
    private javax.swing.JPanel PolicyManagement;
    private javax.swing.JPanel TopPane;
    private javax.swing.JPanel TransactionHistory;
    private javax.swing.JPanel UpdateData;
    private javax.swing.JButton UpdatePanelBtn;
    private javax.swing.JPanel ViewData;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnExport1;
    private javax.swing.JButton btnExport2;
    private javax.swing.JButton btnExport3;
    private javax.swing.JButton btnExport4;
    private javax.swing.JButton btnForecast;
    private javax.swing.JButton btnRefresh3;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnSubmit2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JLabel img1;
    private javax.swing.JLabel img2;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser8;
    private com.toedter.calendar.JDateChooser jDateChooserFromDate;
    private com.toedter.calendar.JDateChooser jDateChooserToDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTableForcast;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lblAmt;
    private javax.swing.JLabel lblAmt1;
    private javax.swing.JLabel lblAmt2;
    private javax.swing.JLabel lblAmt3;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblComments1;
    private javax.swing.JLabel lblComments2;
    private javax.swing.JLabel lblComments3;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDate1;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblDate3;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocation1;
    private javax.swing.JLabel lblLocation2;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblSource1;
    private javax.swing.JLabel lblSource2;
    private javax.swing.JLabel lblToDate;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JTextField txtAmt;
    private javax.swing.JTextField txtAmt1;
    private javax.swing.JTextField txtAmt2;
    private javax.swing.JTextField txtAmt3;
    private javax.swing.JTextField txtAmt4;
    private javax.swing.JTextArea txtAreaComments;
    private javax.swing.JTextArea txtAreaComments1;
    private javax.swing.JTextArea txtAreaComments2;
    private javax.swing.JTextArea txtAreaComments3;
    private javax.swing.JTextArea txtDescription1;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtLocation1;
    private javax.swing.JTextField txtLocation2;
    // End of variables declaration//GEN-END:variables

    private boolean validateEnergyAvailability(String energySource, double offeredQuantity) {
    // Calculate the total energy produced for the specified source
    double totalProduced = calculateTotalEnergyProduced(energySource);

    // Calculate the total energy already sold or committed
    double totalSoldOrCommitted = calculateTotalEnergySoldOrCommitted(energySource);

    // Check if enough energy is available to fulfill the new offer
    return (totalProduced - totalSoldOrCommitted) >= offeredQuantity;
}

private double calculateTotalEnergyProduced(String energySource) {
    // Fetch all energy production data and filter by source
    List<EnergyData> allEnergyData = business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getEdc().getEnergyDataList();
    double totalProduced = allEnergyData.stream()
                                        .filter(data -> data.getSourceOfEnergy().equals(energySource))
                                        .mapToDouble(EnergyData::getEnergyOutput)
                                        .sum();
    return totalProduced;
}

private double calculateTotalEnergySoldOrCommitted(String energySource) {
    // Fetch all offers and transactions, filter by source, and sum the quantities
    double totalSoldOrCommitted = 0.0;
    for (EnergyOffer offer : epp.getEnergyProducer().getEoc().getAllOffers()) {
        if (offer.getEnergySource().equals(energySource)) {
            totalSoldOrCommitted += offer.getQuantity();
        }
    }
    return totalSoldOrCommitted;
}

private void checkForNotifications(){
    if(business.getEnergyProducers().findEnergyProducerById(epp.getEnergyProducer().getProducerID()).getNc().getNotificationList().size()>0){ 
        addImage(notificationLabel, "/images/notified.png");
    }
}

public void populateTransactionsTable() {
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0); // Clear the existing rows


            List<Transaction> transactions = business.getGridData().getTc().getAllTransactions();

            // Iterate over the transactions and add them to the table model
            for (Transaction transaction : transactions) {
                
                
                if(transaction.getProducerId().equals(epp.getEnergyProducer().getProducerID())){
                    Object[] row = new Object[6]; // Adjust the size based on the number of columns in your table
                    row[0] = transaction.getTransactionId().toString();
                    row[1] = transaction.getOfferId().toString();
                    row[2] = transaction.getEnergySource();
                    row[3] = transaction.getTransactionPrice();
                    row[4] = transaction.getAmountSold();
                    row[5] = transaction.getTransactionDate().toString();

                    model.addRow(row);
                }
            }

        jTable4.setModel(model);
    }

}

