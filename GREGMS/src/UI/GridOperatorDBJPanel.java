/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Business.Business;
import Business.EnergyProvider.EnergyData;
import Business.EnergyProvider.EnergyOffer;
import Business.EnergyProvider.EnergyOfferCatalog;
import Business.EnergyProvider.EnergyProducer;
import Business.GridOperator.ConsumerTransaction;
import Business.GridOperator.Maintenance;
import Business.Profiles.GridOperator.GridOperatorProfile;
import Business.Users.UserAccount;
import Business.Utils.ChartUtils;
import Business.Utils.ForecastingUtil;
import Business.Utils.Notification;
import Business.Utils.TableExporter;
import Business.Utils.Transaction;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.IOException;
import java.net.URL;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;

/**
 *
 * @author udayk
 */
public class GridOperatorDBJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GridOperatorDBJPanel
     */
    Business business;
    
    JPanel cardLayout;
    
    UserAccount user;
    
    GridOperatorProfile gop;
    
    UUID currentlyEditingId;
    
    private Image originalImage;
    
    JPanel containerPanel = new JPanel();
    
    public GridOperatorDBJPanel(JPanel cardLayout, Business business, UserAccount user) {
        initComponents();
        this.cardLayout = cardLayout;
        this.business = business;
        this.user = user;
        this.gop = business.getGridOperatorProfiles().findGridOperator(user.getAssociatedPersonProfile().getPerson().getPersonId());
        GridOperatorName.setText(user.getAssociatedPersonProfile().getPerson().getName());
        addImage(notificationLabel, "/images/default.png");
        checkForNotifications();
        populateNotifications();
        populateOffersTable(jTable3, business.getEnergyProducers().getAllProducers());
        populateTransactionsTable();
        updateMaintenanceTable();
        populateConsumedTable();
        populateProcuredTable();
        gridDashboard();
        populatePieGraph();
        billingInfo();
        
        try {
            URL imageURL = getClass().getResource("/images/grid.png");
            if (imageURL != null) {
                originalImage = ImageIO.read(imageURL);
            } else {
                System.err.println("Image not found");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Add a component listener to resize the image when the JLabel is resized
        img1.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent e) {
                resizeImage();
            }
        });
        
        
    }
    
    private void resizeImage() {
        if (originalImage != null) {
            // Resize the image to the current size of the JLabel
            Image resizedImage = originalImage.getScaledInstance(img1.getWidth(), img1.getHeight(), Image.SCALE_SMOOTH);

            // Update the icon of the JLabel
            ImageIcon icon = new ImageIcon(resizedImage);
            img1.setIcon(icon);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        TopPane = new javax.swing.JPanel();
        GOp = new javax.swing.JLabel();
        GridOperatorName = new javax.swing.JLabel();
        notificationLabel = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        GridMonitoring = new javax.swing.JPanel();
        lblEnergyAvail = new javax.swing.JLabel();
        lblEnergyAvailValue = new javax.swing.JLabel();
        lblEnergyCons = new javax.swing.JLabel();
        lblEnergyConsValue = new javax.swing.JLabel();
        lblTotalCons = new javax.swing.JLabel();
        lblTotalConsValue = new javax.swing.JLabel();
        lblEnergyProcuredValue = new javax.swing.JLabel();
        lblEnergyProcured = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ConsumerManagement = new javax.swing.JPanel();
        ConsumerManagementTabbedPane = new javax.swing.JTabbedPane();
        Billing = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        Maintenance = new javax.swing.JPanel();
        MaintenanceTabbedPane = new javax.swing.JTabbedPane();
        ViewMaintenance = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        CreateMaintenance = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        MarketPlace = new javax.swing.JPanel();
        MarketPlaceTabbedPane = new javax.swing.JTabbedPane();
        TransactionHistory = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        btnExport4 = new javax.swing.JButton();
        CurrentOffers = new javax.swing.JPanel();
        btnRefresh2 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnExport2 = new javax.swing.JButton();
        btnBuy = new javax.swing.JButton();
        Reports = new javax.swing.JPanel();
        ReportsTabbedPane = new javax.swing.JTabbedPane();
        ProductionReport = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        btnExport3 = new javax.swing.JButton();
        ConsumptionReport = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        btnExport5 = new javax.swing.JButton();
        Forecast = new javax.swing.JPanel();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        jButton6 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        Graphs = new javax.swing.JPanel();
        Graph2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Notification = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        lblDate3 = new javax.swing.JLabel();
        txtAmt3 = new javax.swing.JTextField();
        lblComments3 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        txtAreaComments3 = new javax.swing.JTextArea();
        lblAmt3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        txtAmt4 = new javax.swing.JTextField();
        Help = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        img1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setFocusable(false);

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(1000, 600));

        TopPane.setBackground(new java.awt.Color(255, 255, 255));

        GOp.setBackground(new java.awt.Color(255, 255, 255));
        GOp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        GOp.setText("GRID OPERATOR");

        GridOperatorName.setFont(new java.awt.Font("Segoe Script", 3, 12)); // NOI18N
        GridOperatorName.setText("Name");

        notificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationLabelMouseClicked(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("logout");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Settings");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopPaneLayout = new javax.swing.GroupLayout(TopPane);
        TopPane.setLayout(TopPaneLayout);
        TopPaneLayout.setHorizontalGroup(
            TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GOp, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(GridOperatorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 718, Short.MAX_VALUE)
                .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addGap(31, 31, 31))
        );
        TopPaneLayout.setVerticalGroup(
            TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(GOp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBack)
                        .addComponent(jButton9))
                    .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GridOperatorName)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(TopPane);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        GridMonitoring.setBackground(new java.awt.Color(255, 255, 255));

        lblEnergyAvail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEnergyAvail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyAvail.setText("Energy Available");
        lblEnergyAvail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnergyAvailValue.setBackground(new java.awt.Color(255, 204, 204));
        lblEnergyAvailValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEnergyAvailValue.setForeground(new java.awt.Color(255, 0, 51));
        lblEnergyAvailValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyAvailValue.setText("<MWh>");
        lblEnergyAvailValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnergyCons.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEnergyCons.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyCons.setText("Energy Consumption");
        lblEnergyCons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnergyConsValue.setBackground(new java.awt.Color(255, 204, 204));
        lblEnergyConsValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEnergyConsValue.setForeground(new java.awt.Color(255, 0, 51));
        lblEnergyConsValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyConsValue.setText("<MWh>");
        lblEnergyConsValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTotalCons.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTotalCons.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalCons.setText("Total Consumers");
        lblTotalCons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTotalConsValue.setBackground(new java.awt.Color(255, 204, 204));
        lblTotalConsValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTotalConsValue.setForeground(new java.awt.Color(255, 0, 51));
        lblTotalConsValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalConsValue.setText("<Nos>");
        lblTotalConsValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnergyProcuredValue.setBackground(new java.awt.Color(255, 204, 204));
        lblEnergyProcuredValue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEnergyProcuredValue.setForeground(new java.awt.Color(255, 0, 51));
        lblEnergyProcuredValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyProcuredValue.setText("<MWh>");
        lblEnergyProcuredValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblEnergyProcured.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEnergyProcured.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnergyProcured.setText("Energy Procured");
        lblEnergyProcured.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GridMonitoringLayout = new javax.swing.GroupLayout(GridMonitoring);
        GridMonitoring.setLayout(GridMonitoringLayout);
        GridMonitoringLayout.setHorizontalGroup(
            GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GridMonitoringLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GridMonitoringLayout.createSequentialGroup()
                        .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnergyProcuredValue, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEnergyProcured))
                        .addGap(47, 47, 47))
                    .addGroup(GridMonitoringLayout.createSequentialGroup()
                        .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblEnergyAvail, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(lblEnergyAvailValue, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblTotalCons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotalConsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEnergyCons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEnergyConsValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
        );

        GridMonitoringLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblEnergyAvail, lblEnergyAvailValue, lblEnergyCons, lblEnergyConsValue, lblEnergyProcured, lblEnergyProcuredValue, lblTotalCons, lblTotalConsValue});

        GridMonitoringLayout.setVerticalGroup(
            GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GridMonitoringLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(GridMonitoringLayout.createSequentialGroup()
                        .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(GridMonitoringLayout.createSequentialGroup()
                                .addComponent(lblEnergyProcured, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblEnergyProcuredValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(GridMonitoringLayout.createSequentialGroup()
                                .addComponent(lblEnergyCons, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblEnergyConsValue, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addGroup(GridMonitoringLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GridMonitoringLayout.createSequentialGroup()
                                .addComponent(lblTotalCons, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTotalConsValue, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                            .addGroup(GridMonitoringLayout.createSequentialGroup()
                                .addComponent(lblEnergyAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblEnergyAvailValue, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        GridMonitoringLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblEnergyAvailValue, lblEnergyConsValue, lblEnergyProcuredValue, lblTotalConsValue});

        GridMonitoringLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblEnergyAvail, lblEnergyCons, lblEnergyProcured, lblTotalCons});

        jTabbedPane1.addTab("Grid Management", GridMonitoring);

        ConsumerManagement.setBackground(new java.awt.Color(255, 255, 255));

        ConsumerManagementTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        ConsumerManagementTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        Billing.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Date", "TransactionID", "Energy Consumed", "Price"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Export");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed1(evt);
            }
        });

        javax.swing.GroupLayout BillingLayout = new javax.swing.GroupLayout(Billing);
        Billing.setLayout(BillingLayout);
        BillingLayout.setHorizontalGroup(
            BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillingLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        BillingLayout.setVerticalGroup(
            BillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillingLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        ConsumerManagementTabbedPane.addTab("Billing Information", Billing);

        javax.swing.GroupLayout ConsumerManagementLayout = new javax.swing.GroupLayout(ConsumerManagement);
        ConsumerManagement.setLayout(ConsumerManagementLayout);
        ConsumerManagementLayout.setHorizontalGroup(
            ConsumerManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConsumerManagementTabbedPane)
        );
        ConsumerManagementLayout.setVerticalGroup(
            ConsumerManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConsumerManagementTabbedPane)
        );

        jTabbedPane1.addTab("Consumer", ConsumerManagement);

        Maintenance.setBackground(new java.awt.Color(255, 255, 255));

        MaintenanceTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        MaintenanceTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        ViewMaintenance.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Date");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Comments");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Maintance ID", "Date", "Comment"
            }
        ));
        jScrollPane13.setViewportView(jTable10);
        if (jTable10.getColumnModel().getColumnCount() > 0) {
            jTable10.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewMaintenanceLayout = new javax.swing.GroupLayout(ViewMaintenance);
        ViewMaintenance.setLayout(ViewMaintenanceLayout);
        ViewMaintenanceLayout.setHorizontalGroup(
            ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewMaintenanceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextField1))
                .addGap(133, 133, 133))
            .addGroup(ViewMaintenanceLayout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ViewMaintenanceLayout.setVerticalGroup(
            ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewMaintenanceLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewMaintenanceLayout.createSequentialGroup()
                        .addGroup(ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(ViewMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        MaintenanceTabbedPane.addTab("View", ViewMaintenance);

        CreateMaintenance.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Date for Maintenance");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Comments (if any)");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateMaintenanceLayout = new javax.swing.GroupLayout(CreateMaintenance);
        CreateMaintenance.setLayout(CreateMaintenanceLayout);
        CreateMaintenanceLayout.setHorizontalGroup(
            CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateMaintenanceLayout.createSequentialGroup()
                .addGroup(CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateMaintenanceLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(CreateMaintenanceLayout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jButton2)))
                .addContainerGap(450, Short.MAX_VALUE))
        );
        CreateMaintenanceLayout.setVerticalGroup(
            CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateMaintenanceLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreateMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(258, Short.MAX_VALUE))
        );

        CreateMaintenanceLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDateChooser1, jLabel12});

        MaintenanceTabbedPane.addTab("Create", CreateMaintenance);

        javax.swing.GroupLayout MaintenanceLayout = new javax.swing.GroupLayout(Maintenance);
        Maintenance.setLayout(MaintenanceLayout);
        MaintenanceLayout.setHorizontalGroup(
            MaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MaintenanceTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        MaintenanceLayout.setVerticalGroup(
            MaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MaintenanceTabbedPane)
        );

        jTabbedPane1.addTab("Maintenance", Maintenance);

        MarketPlace.setBackground(new java.awt.Color(255, 255, 255));

        MarketPlaceTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        MarketPlaceTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        TransactionHistory.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane10.setBackground(new java.awt.Color(255, 255, 255));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Transcation ID", "Offer ID", "Energy Source", "Quantity", "Price", "Date"
            }
        ));
        jScrollPane10.setViewportView(jTable6);

        btnExport4.setBackground(new java.awt.Color(0, 0, 0));
        btnExport4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport4.setForeground(new java.awt.Color(255, 255, 255));
        btnExport4.setText("Export");

        javax.swing.GroupLayout TransactionHistoryLayout = new javax.swing.GroupLayout(TransactionHistory);
        TransactionHistory.setLayout(TransactionHistoryLayout);
        TransactionHistoryLayout.setHorizontalGroup(
            TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionHistoryLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExport4)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TransactionHistoryLayout.setVerticalGroup(
            TransactionHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionHistoryLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExport4)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        MarketPlaceTabbedPane.addTab("Transaction History", TransactionHistory);

        CurrentOffers.setBackground(new java.awt.Color(255, 255, 255));

        btnRefresh2.setBackground(new java.awt.Color(0, 0, 0));
        btnRefresh2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh2.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh2.setText("Refresh");
        btnRefresh2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh2ActionPerformed(evt);
            }
        });

        jScrollPane9.setBackground(new java.awt.Color(255, 255, 255));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Date of Offer", "Offer ID", "Energy Source", "Quantity", "Price", "Status", "Company"
            }
        ));
        jScrollPane9.setViewportView(jTable3);

        btnExport2.setBackground(new java.awt.Color(0, 0, 0));
        btnExport2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport2.setForeground(new java.awt.Color(255, 255, 255));
        btnExport2.setText("Export");
        btnExport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExport2ActionPerformed(evt);
            }
        });

        btnBuy.setBackground(new java.awt.Color(0, 0, 0));
        btnBuy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBuy.setForeground(new java.awt.Color(255, 255, 255));
        btnBuy.setText("Buy");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExport5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CurrentOffersLayout = new javax.swing.GroupLayout(CurrentOffers);
        CurrentOffers.setLayout(CurrentOffersLayout);
        CurrentOffersLayout.setHorizontalGroup(
            CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentOffersLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CurrentOffersLayout.createSequentialGroup()
                        .addComponent(btnBuy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh2))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(222, Short.MAX_VALUE))
        );
        CurrentOffersLayout.setVerticalGroup(
            CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentOffersLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CurrentOffersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh2)
                    .addComponent(btnExport2)
                    .addComponent(btnBuy))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        MarketPlaceTabbedPane.addTab("Current Offers and Bids", CurrentOffers);

        javax.swing.GroupLayout MarketPlaceLayout = new javax.swing.GroupLayout(MarketPlace);
        MarketPlace.setLayout(MarketPlaceLayout);
        MarketPlaceLayout.setHorizontalGroup(
            MarketPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MarketPlaceTabbedPane)
        );
        MarketPlaceLayout.setVerticalGroup(
            MarketPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MarketPlaceTabbedPane)
        );

        jTabbedPane1.addTab("MarketPlace", MarketPlace);

        Reports.setBackground(new java.awt.Color(255, 255, 255));

        ReportsTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        ReportsTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        ProductionReport.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Source of Energy", "Quantity Procured"
            }
        ));
        jScrollPane6.setViewportView(jTable4);

        btnExport3.setBackground(new java.awt.Color(0, 0, 0));
        btnExport3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport3.setForeground(new java.awt.Color(255, 255, 255));
        btnExport3.setText("Export");

        javax.swing.GroupLayout ProductionReportLayout = new javax.swing.GroupLayout(ProductionReport);
        ProductionReport.setLayout(ProductionReportLayout);
        ProductionReportLayout.setHorizontalGroup(
            ProductionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductionReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProductionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExport3)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        ProductionReportLayout.setVerticalGroup(
            ProductionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductionReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExport3)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        ReportsTabbedPane.addTab("Production", ProductionReport);

        ConsumptionReport.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane12.setBackground(new java.awt.Color(255, 255, 255));

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Consumers", "Energy Consumption"
            }
        ));
        jScrollPane12.setViewportView(jTable9);

        btnExport5.setBackground(new java.awt.Color(0, 0, 0));
        btnExport5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport5.setForeground(new java.awt.Color(255, 255, 255));
        btnExport5.setText("Export");

        javax.swing.GroupLayout ConsumptionReportLayout = new javax.swing.GroupLayout(ConsumptionReport);
        ConsumptionReport.setLayout(ConsumptionReportLayout);
        ConsumptionReportLayout.setHorizontalGroup(
            ConsumptionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsumptionReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConsumptionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExport5)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(248, Short.MAX_VALUE))
        );
        ConsumptionReportLayout.setVerticalGroup(
            ConsumptionReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsumptionReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExport5)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        ReportsTabbedPane.addTab("Consumption", ConsumptionReport);

        Forecast.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setText("From Date");

        jLabel19.setText("To Date");

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Forecast");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Forecasted Production"
            }
        ));
        jScrollPane5.setViewportView(jTable7);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("View as Graphs");

        jLabel20.setText("Production Forecast");

        jLabel21.setText("Consumption Forecast");

        jScrollPane11.setBackground(new java.awt.Color(255, 255, 255));

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Forecasted Consumption"
            }
        ));
        jScrollPane11.setViewportView(jTable8);

        javax.swing.GroupLayout ForecastLayout = new javax.swing.GroupLayout(Forecast);
        Forecast.setLayout(ForecastLayout);
        ForecastLayout.setHorizontalGroup(
            ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForecastLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForecastLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addGroup(ForecastLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ForecastLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        ForecastLayout.setVerticalGroup(
            ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForecastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ForecastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        ForecastLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDateChooser7, jLabel18});

        ReportsTabbedPane.addTab("ForeCast", Forecast);

        Graphs.setBackground(new java.awt.Color(255, 255, 255));

        Graph2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(584, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        Graph2.addTab("Graphs1", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(618, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        Graph2.addTab("Graphs2", jPanel1);

        javax.swing.GroupLayout GraphsLayout = new javax.swing.GroupLayout(Graphs);
        Graphs.setLayout(GraphsLayout);
        GraphsLayout.setHorizontalGroup(
            GraphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Graph2)
        );
        GraphsLayout.setVerticalGroup(
            GraphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Graph2)
        );

        ReportsTabbedPane.addTab("Graphs", Graphs);

        javax.swing.GroupLayout ReportsLayout = new javax.swing.GroupLayout(Reports);
        Reports.setLayout(ReportsLayout);
        ReportsLayout.setHorizontalGroup(
            ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1175, Short.MAX_VALUE)
            .addGroup(ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ReportsTabbedPane))
        );
        ReportsLayout.setVerticalGroup(
            ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
            .addGroup(ReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ReportsTabbedPane))
        );

        jTabbedPane1.addTab("Reports", Reports);

        Notification.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane16.setBackground(new java.awt.Color(255, 255, 255));

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NotifcationID", "Message", "Timestamp"
            }
        ));
        jScrollPane16.setViewportView(jTable13);

        lblDate3.setBackground(new java.awt.Color(192, 221, 250));
        lblDate3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDate3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDate3.setText("Date");

        lblComments3.setBackground(new java.awt.Color(192, 221, 250));
        lblComments3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComments3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblComments3.setText("Message");

        jScrollPane17.setBackground(new java.awt.Color(192, 221, 250));

        txtAreaComments3.setColumns(20);
        txtAreaComments3.setRows(5);
        jScrollPane17.setViewportView(txtAreaComments3);

        lblAmt3.setBackground(new java.awt.Color(192, 221, 250));
        lblAmt3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmt3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmt3.setText("Notification ID");

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("View");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(0, 0, 0));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NotificationLayout = new javax.swing.GroupLayout(Notification);
        Notification.setLayout(NotificationLayout);
        NotificationLayout.setHorizontalGroup(
            NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationLayout.createSequentialGroup()
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NotificationLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteBtn))
                    .addGroup(NotificationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblComments3)
                    .addComponent(lblAmt3)
                    .addComponent(lblDate3))
                .addGap(18, 18, 18)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane17)
                    .addComponent(txtAmt3)
                    .addComponent(txtAmt4))
                .addGap(159, 159, 159))
        );

        NotificationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAmt3, lblComments3, lblDate3});

        NotificationLayout.setVerticalGroup(
            NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificationLayout.createSequentialGroup()
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NotificationLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDate3)
                            .addComponent(txtAmt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAmt3)
                            .addComponent(txtAmt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComments3)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(NotificationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NotificationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(DeleteBtn))
                .addContainerGap())
        );

        NotificationLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblAmt3, lblComments3, lblDate3, txtAmt3, txtAmt4});

        jTabbedPane1.addTab("Notifications", Notification);

        Help.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane5.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane5.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Issue raised By ");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane8.setViewportView(txtDescription);

        jLabel11.setText("Description of Issue");

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane8)
                            .addComponent(jTextField6)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Submit Issue", jPanel8);

        javax.swing.GroupLayout HelpLayout = new javax.swing.GroupLayout(Help);
        Help.setLayout(HelpLayout);
        HelpLayout.setHorizontalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1175, Short.MAX_VALUE)
        );
        HelpLayout.setVerticalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Help", Help);

        jSplitPane1.setRightComponent(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addImage(JLabel lbl, String url){
        URL imageUrl = getClass().getResource(url);
        if (imageUrl != null) {
            ImageIcon icon = new ImageIcon(imageUrl);

            // Scale it to fit the JLabel
            Image image = icon.getImage();
            Image newimg = image.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH); // Scale it to fit the JLabel dimensions

            // Re-create the ImageIcon with the new scaled image
            icon = new ImageIcon(newimg);

            // Set the icon on the label
            lbl.setIcon(icon);
        } else {
            System.err.println("Resource not found: /images/default.png");
        }
    }
    
    private void checkForNotifications(){
        if(!business.getGridData().getNc().getNotificationList().isEmpty()){ 
            addImage(notificationLabel, "/images/notified.png");
        }
    }
    
    private void updateMaintenanceTable() {
        // Assuming you have a JTable named maintenanceTable
        DefaultTableModel model = (DefaultTableModel) jTable10.getModel();
        model.setRowCount(0); // Clear the existing rows

        // Iterate over the maintenance records and add them to the table
        for (Maintenance record : business.getGridData().getMaintenanceScheduleList().getAllMaintenanceRecords()) {
            Object[] row = new Object[] {
                record,
                record.getDateForMaintenance().toString(),
                record.getComments()
            };
            model.addRow(row);
        }
    }
    
    private void populateNotifications(){
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();

        // Clear the current contents of the table
        model.setRowCount(0);

        // Retrieve the list of all offers from the catalog
        List<Notification> ns = business.getGridData().getNc().getNotificationList();

        // Populate the table with the offer data
        for (Notification n : ns) {
            Object[] row = new Object[6]; // Adjust the size based on the number of columns in your table
            row[0] = n; // Adjust this to match the actual date format you want to display
            row[1] = n.getMessage();
            row[2] = n.getDateTime();
            model.addRow(row);
        }
    }
    private void notificationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationLabelMouseClicked
        jTabbedPane1.setSelectedIndex(5);
        addImage(notificationLabel, "/images/default.png");
    }//GEN-LAST:event_notificationLabelMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int selectedRow = jTable7.getSelectedRow();
        if (selectedRow >= 0) {
            Notification n = (Notification) jTable7.getModel().getValueAt(selectedRow, 0);
            LocalDateTime localDt = n.getDateTime();
            txtAmt4.setText(localDt.toString());
            txtAmt3.setText(n.getNotificationId().toString());
            txtAreaComments3.setText(n.getMessage());
            txtAmt3.setEditable(false);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Notification to view.");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    public void populateOffersTable(JTable tableModel, List<EnergyProducer> producers) {
    DefaultTableModel model = (DefaultTableModel) tableModel.getModel();
    model.setRowCount(0);
    
    // Iterate through all producers
    for (EnergyProducer producer : producers) {
        // Access each producer's EnergyOfferCatalog
        EnergyOfferCatalog offerCatalog = producer.getEoc();
        
        // Now get all offers from the catalog
        List<EnergyOffer> offers = offerCatalog.getAllOffers();
        
        // Add each offer's details to the table model
        for (EnergyOffer offer : offers) {
            Object[] row = new Object[]{
                offer.getLastUpdated(), // Assuming this is a field in EnergyOffer
                offer,
                offer.getEnergySource(),
                offer.getQuantity(),
                offer.getPrice(),
                offer.getStatus(), // Assuming this is a field in EnergyOffer
                business.getEnergyProducers().findEnergyProducerById(offer.getProducerId()).getName()
            };
            
            model.addRow(row);
        }
    }
}

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed

        business.getGridData().getNc().removeNotification(UUID.fromString(txtAmt3.getText()));
        txtAmt4.setText("");
        txtAmt3.setText("");
        txtAreaComments3.setText("");
        txtAmt3.setEditable(false);
        JOptionPane.showMessageDialog(null, "Notifiaction Deleted.");
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void btnExport5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExport5ActionPerformed
        int selectedRow = jTable3.getSelectedRow();
    if (selectedRow >= 0) {
        EnergyOffer offer = (EnergyOffer)jTable3.getValueAt(selectedRow, 1); // Assuming Offer ID is in the second column
        
        if ("Available".equals(offer.getStatus())) {
            double quantity = offer.getQuantity(); // Assuming Quantity is in the fourth column
            double price = offer.getPrice(); // Assuming Price is in the fifth column
            
            business.getGridData().getTc().recordTransaction(offer.getOfferId(), quantity, price, offer.getEnergySource(), offer.getProducerId());
            offer.setStatus("Sold");
            
            System.out.println(offer.getProducerId());
            System.out.println(business.getEnergyProducers().findEnergyProducerById(offer.getProducerId()).getProducerID());
            EnergyProducer ep = business.getEnergyProducers().findEnergyProducerById(offer.getProducerId());
            System.out.println(ep.getName());
            ep.getNc().addNotification("Offer Sold OfferID"+offer.getOfferId());
            populateOffersTable(jTable3, business.getEnergyProducers().getAllProducers());
            populateTransactionsTable();
            populateProcuredTable();
            gridDashboard();
            populatePieGraph();
            // Show a confirmation message
            JOptionPane.showMessageDialog(this, "Transaction completed successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Selected offer is not available.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an offer to buy.");
    }
    }//GEN-LAST:event_btnExport5ActionPerformed

    private void btnExport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExport2ActionPerformed
        TableExporter.exportToCSV(jTable3, this);
    }//GEN-LAST:event_btnExport2ActionPerformed

    private void btnRefresh2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh2ActionPerformed
        populateOffersTable(jTable3, business.getEnergyProducers().getAllProducers());
    }//GEN-LAST:event_btnRefresh2ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        cardLayout.remove(this);
        CardLayout layout = (CardLayout) cardLayout.getLayout();
        layout.previous(cardLayout);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        LocalDate dateForMaintenance = jDateChooser1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String comments = jTextArea2.getText();

        // Validate the input as necessary
        if (dateForMaintenance != null && !comments.trim().isEmpty()) {
            // Create a new maintenance record and add it to the catalog
            Maintenance newMaintenanceRecord = business.getGridData().getMaintenanceScheduleList().addMaintenanceRecord(dateForMaintenance, comments);

            // Optionally, clear the input fields
            jDateChooser1.setDate(null);
            jTextArea2.setText("");

            // Notify the user
            JOptionPane.showMessageDialog(this, "Maintenance record added successfully");

            // Update the UI to reflect the new record (e.g., refresh the table)
            updateMaintenanceTable();
         
        } else {
            // Notify the user of the error
            JOptionPane.showMessageDialog(this, "Please fill in all the required fields", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        // Get the selected row from the maintenance table
        int selectedRow = jTable10.getSelectedRow();

        // Check if a row is actually selected
        if (selectedRow >= 0) {
            // Assuming your table's model is DefaultTableModel
            DefaultTableModel model = (DefaultTableModel) jTable10.getModel();

            // Retrieve the selected Maintenance ID from the table
            Maintenance m = (Maintenance)model.getValueAt(selectedRow, 0);

            // Assuming you have a method in your MaintenanceCatalog to find records by ID
            Maintenance maintenanceRecord = business.getGridData().getMaintenanceScheduleList().findMaintenanceById(m.getMaintenanceId());

            // Check if a record is found
            if (maintenanceRecord != null) {
                // Set the details in the text fields
                jTextField1.setText(maintenanceRecord.getDateForMaintenance().toString());
                jTextArea1.setText(maintenanceRecord.getComments());
            } else {
                JOptionPane.showMessageDialog(this, "No record found for the selected Maintenance ID.");
            }
        } else {
            // No row selected
            JOptionPane.showMessageDialog(this, "Please select a row to view details.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed1
         TableExporter.exportToCSV(jTable2, this);
    }//GEN-LAST:event_jButton4ActionPerformed1

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String raised = jTextField6.getText();
        String Des = txtDescription.getText();

        business.getTpd().add(Des, raised);
        JOptionPane.showMessageDialog(this, "Issue reported succusfully");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        AccInfoUpdateJPanel accCreationPanel = new AccInfoUpdateJPanel(cardLayout, business, user);
        cardLayout.add("AccInfoUpdateJPanel", accCreationPanel);
        CardLayout layout = (CardLayout) cardLayout.getLayout();
        layout.next(cardLayout);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       List<EnergyData> historicalData = new ArrayList<>();
       for(EnergyProducer ep : business.getEnergyProducers().getAllProducers()){
           for(EnergyData ed : ep.getEdc().getEnergyDataList()){
            historicalData.add(ed);
           }
       }
        System.out.println("frocast "+historicalData.size());
        
        // Forecast future production based on the average
        LocalDate startDate = jDateChooser7.getDate().toInstant()
        .atZone(ZoneId.systemDefault())
        .toLocalDate(); // get start date from "From Date" date chooser

        LocalDate endDate = jDateChooser8.getDate().toInstant()
        .atZone(ZoneId.systemDefault())
        .toLocalDate();// get end date from "To Date" date chooser
        
        List<EnergyData> forecastedData = ForecastingUtil.forecastProduction(historicalData, startDate, endDate, null, "defaultLocation", "defaultSource");
        ChartPanel chartPanel2 = ChartUtils.createLineChartPanel(forecastedData);
        
        Map<LocalDate, Double> m  = ForecastingUtil.forecastAllConsumerDemand(business.getGridData().getCt(), startDate, endDate);
        JFreeChart chart = ChartUtils.createLineChart(m);

// Create a panel to display the chart
        ChartPanel chartPanel1 = new ChartPanel(chart);
        // Assuming 'this' is a JPanel, you add the chartPanel to it
        containerPanel.removeAll();
    
    // Set the layout
        // Set preferred sizes for both chart panels
    Dimension chartSize = new Dimension(500, 400); // Set your desired size
    chartPanel1.setPreferredSize(chartSize);
    chartPanel2.setPreferredSize(chartSize);

    // Create a container panel

    // Set the layout to GridLayout for equal sizing
    containerPanel.setLayout(new GridLayout(1, 2)); // 1 row, 2 columns

    // Add both chart panels to the container
    containerPanel.add(chartPanel1);
    containerPanel.add(chartPanel2);

    // Display the container panel in a JOptionPane
    
        populateForecastTable(forecastedData);
        populateForecastTable(m);
    }//GEN-LAST:event_jButton6ActionPerformed

        private void populateForecastTable(List<EnergyData> forecastedData) {
        DefaultTableModel model = (DefaultTableModel) jTable7.getModel(); // Replace jTableForecast with your actual table name
        model.setRowCount(0); // Clear existing data

        for (EnergyData data : forecastedData) {
           Object[] row = new Object[3]; 
            row[0] = data.getTimestamp().toLocalDate(); 
            row[1] = data.getEnergyOutput();
            model.addRow(row);
        }
    }
        
            private void populateForecastTable(Map<LocalDate, Double> m) {
        DefaultTableModel model = (DefaultTableModel) jTable8.getModel();
        model.setRowCount(0); // Clear existing data

        for (Map.Entry<LocalDate, Double> entry : m.entrySet()) {
            LocalDate date = entry.getKey();
            Double value = entry.getValue();
            Object[] row = new Object[2];
                row[0] = date;
                row[1] = value;
            model.addRow(row);
        }
        
    }
    
    public void populateTransactionsTable() {
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        model.setRowCount(0); // Clear the existing rows


            List<Transaction> transactions = business.getGridData().getTc().getAllTransactions();

            // Iterate over the transactions and add them to the table model
            for (Transaction transaction : transactions) {
                Object[] row = new Object[6]; // Adjust the size based on the number of columns in your table
                row[0] = transaction.getTransactionId().toString();
                row[1] = transaction.getOfferId().toString();
                row[2] = transaction.getEnergySource();
                row[3] = transaction.getTransactionPrice();
                row[4] = transaction.getAmountSold();
                row[5] = transaction.getTransactionDate().toString();

                model.addRow(row);
            }

        jTable6.setModel(model);
    }
    
    private void populateProcuredTable() {
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0); // Clear the existing rows


            List<Transaction> transactions = business.getGridData().getTc().getAllTransactions();

            // Iterate over the transactions and add them to the table model
            for (Transaction transaction : transactions) {
                Object[] row = new Object[2]; // Adjust the size based on the number of columns in your table
                row[0] = transaction.getEnergySource();
                row[1] = transaction.getAmountSold();

                model.addRow(row);
            }

        jTable4.setModel(model);
        ChartPanel chartPanel = ChartUtils.createEnergySourcePieChart(business.getEnergyProducers());
        jPanel3.removeAll();
        // Assuming 'this' is a JPanel, you add the chartPanel to it
        jPanel3.setLayout(new BorderLayout());
        jPanel3.add(chartPanel, BorderLayout.CENTER);

        // Revalidate and repaint to ensure the chart is displayed
        jPanel3.revalidate();
        jPanel3.repaint();
    }
    
    private void populateConsumedTable() {
        DefaultTableModel model = (DefaultTableModel) jTable9.getModel();
        model.setRowCount(0); // Clear the existing rows


            List<ConsumerTransaction> transactions = business.getGridData().getCt();

            // Iterate over the transactions and add them to the table model
            for (ConsumerTransaction transaction : transactions) {
                Object[] row = new Object[2]; // Adjust the size based on the number of columns in your table
                row[0] = transaction.getConsumerId();
                row[1] = transaction.getQuantityOfEnergy();

                model.addRow(row);
            }

        jTable9.setModel(model);
        ChartPanel chartPanel = ChartUtils.createEnergySourceChart(business.getGridData().getTc().getAllTransactions());

        // Assuming 'this' is a JPanel, you add the chartPanel to it
        jPanel4.removeAll();
        jPanel4.setLayout(new BorderLayout());
        jPanel4.add(chartPanel, BorderLayout.CENTER);

        // Revalidate and repaint to ensure the chart is displayed
        jPanel4.revalidate();
        jPanel4.repaint();
    }
    
    private void billingInfo(){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Clear the existing rows


            List<ConsumerTransaction> transactions = business.getGridData().getCt();

            // Iterate over the transactions and add them to the table model
            for (ConsumerTransaction transaction : transactions) {
                Object[] row = new Object[5]; // Adjust the size based on the number of columns in your table
                row[0] = transaction.getConsumerId();
                row[1] = transaction.getDate();
                row[2] = transaction.getTransactionId();
                row[3] = transaction.getQuantityOfEnergy();
                row[4] = transaction.getPrice();

                model.addRow(row);
            }

        jTable2.setModel(model);
    }
    
    
    private void gridDashboard(){
        Double totalProcured = business.getGridData().calculateTotalEnergyProcured();
        Double totalConsumed = business.getGridData().calculateTotalEnergyConsumered();
        lblEnergyProcuredValue.setText(String.valueOf(totalProcured));
        lblEnergyConsValue.setText(String.valueOf(totalConsumed));
        
        lblEnergyAvailValue.setText(String.valueOf(totalProcured-totalConsumed));
        
        lblTotalConsValue.setText(String.valueOf(business.getGridData().findTotalConsumers()));
        populatePieGraph();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Billing;
    private javax.swing.JPanel ConsumerManagement;
    private javax.swing.JTabbedPane ConsumerManagementTabbedPane;
    private javax.swing.JPanel ConsumptionReport;
    private javax.swing.JPanel CreateMaintenance;
    private javax.swing.JPanel CurrentOffers;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JPanel Forecast;
    private javax.swing.JLabel GOp;
    private javax.swing.JTabbedPane Graph2;
    private javax.swing.JPanel Graphs;
    private javax.swing.JPanel GridMonitoring;
    private javax.swing.JLabel GridOperatorName;
    private javax.swing.JPanel Help;
    private javax.swing.JPanel Maintenance;
    private javax.swing.JTabbedPane MaintenanceTabbedPane;
    private javax.swing.JPanel MarketPlace;
    private javax.swing.JTabbedPane MarketPlaceTabbedPane;
    private javax.swing.JPanel Notification;
    private javax.swing.JPanel ProductionReport;
    private javax.swing.JPanel Reports;
    private javax.swing.JTabbedPane ReportsTabbedPane;
    private javax.swing.JPanel TopPane;
    private javax.swing.JPanel TransactionHistory;
    private javax.swing.JPanel ViewMaintenance;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnExport2;
    private javax.swing.JButton btnExport3;
    private javax.swing.JButton btnExport4;
    private javax.swing.JButton btnExport5;
    private javax.swing.JButton btnRefresh2;
    private javax.swing.JLabel img1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser8;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lblAmt3;
    private javax.swing.JLabel lblComments3;
    private javax.swing.JLabel lblDate3;
    private javax.swing.JLabel lblEnergyAvail;
    private javax.swing.JLabel lblEnergyAvailValue;
    private javax.swing.JLabel lblEnergyCons;
    private javax.swing.JLabel lblEnergyConsValue;
    private javax.swing.JLabel lblEnergyProcured;
    private javax.swing.JLabel lblEnergyProcuredValue;
    private javax.swing.JLabel lblTotalCons;
    private javax.swing.JLabel lblTotalConsValue;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JTextField txtAmt3;
    private javax.swing.JTextField txtAmt4;
    private javax.swing.JTextArea txtAreaComments3;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables

    private void populatePieGraph() {
        Map<String, Double> aggregatedData = business.getGridData().aggregateAmountSoldByEnergySource();
        
        JFreeChart chart = ChartUtils.createPieChart(aggregatedData);

// Create a panel to display the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(370, 370));  // You can adjust the size
        
        // Assuming 'this' is a JPanel, you add the chartPanel to it
        jPanel5.removeAll();
        jPanel5.setLayout(new BorderLayout());
        jPanel5.add(chartPanel, BorderLayout.CENTER);

        // Revalidate and repaint to ensure the chart is displayed
        jPanel5.revalidate();
        jPanel5.repaint();
    }
}
